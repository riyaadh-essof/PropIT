//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABSA.PropertySvcRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PropertySvcRef.IProperty")]
    public interface IProperty {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/Login", ReplyAction="http://tempuri.org/IProperty/LoginResponse")]
        ABSA.PropertySvcRef.LoginResponse Login(ABSA.PropertySvcRef.LoginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/Login", ReplyAction="http://tempuri.org/IProperty/LoginResponse")]
        System.Threading.Tasks.Task<ABSA.PropertySvcRef.LoginResponse> LoginAsync(ABSA.PropertySvcRef.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/Register", ReplyAction="http://tempuri.org/IProperty/RegisterResponse")]
        void Register(string name, string surname, string email, string password, string type, string contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/Register", ReplyAction="http://tempuri.org/IProperty/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(string name, string surname, string email, string password, string type, string contact);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sEmail;
        
        public LoginRequest() {
        }
        
        public LoginRequest(string email, string password, string sEmail) {
            this.email = email;
            this.password = password;
            this.sEmail = sEmail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool LoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sEmail;
        
        public LoginResponse() {
        }
        
        public LoginResponse(bool LoginResult, string sEmail) {
            this.LoginResult = LoginResult;
            this.sEmail = sEmail;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPropertyChannel : ABSA.PropertySvcRef.IProperty, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PropertyClient : System.ServiceModel.ClientBase<ABSA.PropertySvcRef.IProperty>, ABSA.PropertySvcRef.IProperty {
        
        public PropertyClient() {
        }
        
        public PropertyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PropertyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ABSA.PropertySvcRef.LoginResponse ABSA.PropertySvcRef.IProperty.Login(ABSA.PropertySvcRef.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public bool Login(string email, string password, ref string sEmail) {
            ABSA.PropertySvcRef.LoginRequest inValue = new ABSA.PropertySvcRef.LoginRequest();
            inValue.email = email;
            inValue.password = password;
            inValue.sEmail = sEmail;
            ABSA.PropertySvcRef.LoginResponse retVal = ((ABSA.PropertySvcRef.IProperty)(this)).Login(inValue);
            sEmail = retVal.sEmail;
            return retVal.LoginResult;
        }
        
        public System.Threading.Tasks.Task<ABSA.PropertySvcRef.LoginResponse> LoginAsync(ABSA.PropertySvcRef.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public void Register(string name, string surname, string email, string password, string type, string contact) {
            base.Channel.Register(name, surname, email, password, type, contact);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(string name, string surname, string email, string password, string type, string contact) {
            return base.Channel.RegisterAsync(name, surname, email, password, type, contact);
        }
    }
}
